---
import Heading from "../common/Heading.astro";
import WhyUsTag from "./WhyUsTag.astro";
import ChatIcon from "../../assets/home/chat.png";
import CallIcon from "../../assets/home/call.png";
import Image from "astro/components/Image.astro";
import Tag2 from "../../assets/icons/tag2.png";
import Tag3 from "../../assets/icons/tag3.png";
import Tag4 from "../../assets/icons/tag4.png";
import Tag5 from "../../assets/icons/tag5.png";
import Tag6 from "../../assets/icons/tag6.png";
import Tag7 from "../../assets/icons/tag7.png";
import Tag8 from "../../assets/icons/tag8.png";
---

<!-- Single section with SVG background -->
<section
  class="whyus-gradient-background relative flex min-h-screen flex-col justify-between overflow-hidden py-8 lg:pt-20"
  data-section-id={Math.random().toString(36).substr(2, 9)}
>
  <div class="absolute inset-0 -z-10 h-full w-full">
    <svg
      width="100%"
      height="100%"
      viewBox="0 0 1920 871"
      preserveAspectRatio="none"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      class="h-full w-full"
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M1920 20C1920 8.95431 1911.05 0 1900 0H20C8.95431 0 0 8.9543 0 20V692C0 703.046 8.9543 712 20 712H280C291.046 712 300 720.954 300 732V843C300 858.464 312.536 871 328 871H1592C1607.46 871 1620 858.464 1620 843V732C1620 720.954 1628.95 712 1640 712H1900C1911.05 712 1920 703.046 1920 692V20Z"
        fill="url(#paint0_linear_38_3017)"></path>
      <defs>
        <linearGradient
          id="paint0_linear_38_3017"
          x1="300"
          y1="760.5"
          x2="1620"
          y2="760.5"
          gradientUnits="userSpaceOnUse"
        >
          <stop stop-color="#FD34FC"></stop>
          <stop offset="1" stop-color="#3135F6"></stop>
        </linearGradient>
      </defs>
    </svg>
  </div>
  <!-- Main content area -->
  <div class="upper-content container lg:pb-10">
    <Heading id="why-us-heading" title="Why Swift Achievers?" />
    <h3
      class="why-us-subtitle 3xl:text-[26px] mt-4 text-[18px] text-white lg:text-[20px] xl:text-[22px] 2xl:text-[24px]"
    >
      Swift Achievers Will Harness the Power of a Successful E-Commerce Growth
      Strategy!
    </h3>
    <p
      class="why-us-description mt-4 text-xs text-white lg:text-sm 2xl:text-base"
    >
      Our Amazon Marketing Agency combines intelligent strategies with profit
      opportunities and new product solutions for brands in all niches. Our
      operational expertise has given us a creative, hands-on approach to
      assisting brands in reaching, expanding, and leading the e-commerce
      ecosystem.
    </p>
    <div
      class="why-us-tags item-center mx-auto mt-20 mb-4 grid grid-cols-1 gap-x-4 gap-y-6 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4"
    >
      <WhyUsTag
        id="why-us-tag-1"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-2"
        title="Store Management"
        description="To efficiently track, source, manage, and handle inventory"
        image={Tag2}
      />
      <WhyUsTag
        id="why-us-tag-3"
        title="Optimized Content"
        description="To optimize product listing and ranking on amazon"
        image={Tag3}
      />
      <WhyUsTag
        id="why-us-tag-4"
        title="Support"
        description="For responsive and customer-centric support help for advertising Amazon"
        image={Tag4}
      />
      <WhyUsTag
        id="why-us-tag-5"
        title="Amazon Advertising"
        description="To optimize sales with strategic Amazon advertising"
        image={Tag5}
      />
      <WhyUsTag
        id="why-us-tag-6"
        title="Amazon Sales Boost"
        description="To optimize product listing and ranking on amazon"
        image={Tag6}
      />
      <WhyUsTag
        id="why-us-tag-7"
        title="Price & Product Comparison"
        description="To assist your company in locating the best product and price"
        image={Tag7}
      />
      <WhyUsTag
        id="why-us-tag-8"
        title="EBC/A+ Content"
        description="For responsive and customer-centric support help for advertising Amazon"
        image={Tag8}
      />
    </div>
  </div>

  <!-- Bottom CTA area aligned with the narrower part of SVG -->
  <div
    class="bottom-content 3xl:max-w-[1420px] mx-auto max-w-[400px] px-2 sm:max-w-[600px] lg:max-w-[680px] lg:px-0 xl:max-w-[850px] 2xl:max-w-[1000px]"
  >
    <div class="xl:py-8">
      <div
        class="flex flex-col items-center justify-between gap-x-24 gap-y-6 md:flex-row"
      >
        <div class="3xl:max-w-[60%] flex flex-col gap-4 lg:max-w-3/4">
          <h1
            id="why-us-secondary-heading"
            class="3xl:text-[56px] text-3xl leading-[1.2] font-semibold text-white md:text-4xl xl:text-5xl"
          >
            Benefit from the growing E-Commerce Ecosystem
          </h1>
          <p
            class="why-us-cta-subtitle 3xl:text-xl text-xs font-semibold text-white md:text-sm lg:text-base xl:text-lg"
          >
            Connect with our senior consultants!
          </p>
        </div>
        <div class="why-us-buttons flex w-fit flex-col gap-6">
          <button
            class="why-us-call-btn 3xl:text-xl flex items-center justify-center gap-2 rounded-full bg-white px-5 py-1 text-left text-xs font-semibold whitespace-nowrap text-[#120136] md:text-sm xl:text-base"
          >
            <Image src={CallIcon} alt="Call Icon" class="h-4 w-4" />
            <span>Call Now</span>
          </button>
          <button
            class="why-us-chat-btn 3xl:text-xl flex items-center justify-center gap-2 rounded-full bg-white px-5 py-1 text-left text-xs font-semibold whitespace-nowrap text-[#120136] md:text-sm xl:text-base"
          >
            <Image src={ChatIcon} alt="Chat Icon" class="h-4 w-4" />
            <span>Get a Quote</span>
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .whyus-gradient-background {
    background: linear-gradient(
      90deg,
      var(--color-gradient-start),
      var(--color-gradient-end)
    );
  }

  @media screen and (min-width: 1024px) {
    .whyus-gradient-background {
      background: transparent;
    }
  }
</style>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  // Register ScrollTrigger plugin
  gsap.registerPlugin(ScrollTrigger);

  // Select section
  const sections = document.querySelectorAll(".whyus-svg-background");

  sections.forEach((section) => {
    const sectionId = section.dataset.sectionId;

    // Get elements to animate in upper content
    const mainHeading = section.querySelector("#why-us-heading");
    const subtitle = section.querySelector(".why-us-subtitle");
    const description = section.querySelector(".why-us-description");
    const tags = section.querySelectorAll(".why-us-tags > div");

    // Get elements to animate in bottom content
    const secondaryHeading = section.querySelector("#why-us-secondary-heading");
    const ctaSubtitle = section.querySelector(".why-us-cta-subtitle");
    const buttons = section.querySelectorAll(".why-us-buttons button");

    // Create timeline with ScrollTrigger for upper content
    const tlUpper = gsap.timeline({
      scrollTrigger: {
        trigger: section.querySelector(".upper-content"),
        start: "top bottom",
        end: "bottom 70%",
        scrub: 1,
        toggleActions: "restart none none reverse",
        id: `whyus-upper-${sectionId}`,
        once: false,
      },
    });

    // Add animations for upper section elements
    if (mainHeading)
      tlUpper.fromTo(
        mainHeading,
        { y: 30, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0,
      );
    if (subtitle)
      tlUpper.fromTo(
        subtitle,
        { y: 20, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0.1,
      );
    if (description)
      tlUpper.fromTo(
        description,
        { y: 20, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0.2,
      );

    // Enhanced animations for WhyUsTag components
    if (tags.length > 0) {
      // First set initial state for all tags
      gsap.set(tags, { opacity: 0, y: 40, scale: 0.9 });

      // Animate each tag with enhanced effects
      tags.forEach((tag, index) => {
        // Get the tag title and description
        const tagTitle = tag.querySelector("h3");
        const tagDescription = tag.querySelector("p");

        // Calculate staggered delay based on grid position
        const row = Math.floor(index / 4); // Assuming 4 columns in xl breakpoint
        const col = index % 4;
        const delay = 0.3 + row * 0.05 + col * 0.05;

        // Create a mini-timeline for each tag
        tlUpper.add(() => {
          const miniTl = gsap.timeline();

          // Animate the container
          miniTl.to(
            tag,
            {
              opacity: 1,
              y: 0,
              scale: 1,
              duration: 0.4,
              ease: "power2.out",
            },
            0,
          );

          // Animate title with slight offset
          if (tagTitle) {
            miniTl.fromTo(
              tagTitle,
              { opacity: 0, y: 10 },
              { opacity: 1, y: 0, duration: 0.3 },
              0.1,
            );
          }

          // Animate description with further offset
          if (tagDescription) {
            miniTl.fromTo(
              tagDescription,
              { opacity: 0, y: 8 },
              { opacity: 1, y: 0, duration: 0.3 },
              0.2,
            );
          }

          return miniTl;
        }, delay);
      });

      // Add hover animations
      tags.forEach((tag) => {
        tag.addEventListener("mouseenter", () => {
          gsap.to(tag, {
            y: -5,
            scale: 1.03,
            boxShadow: "0 10px 20px rgba(0,0,0,0.15)",
            duration: 0.3,
          });
        });

        tag.addEventListener("mouseleave", () => {
          gsap.to(tag, {
            y: 0,
            scale: 1,
            boxShadow: "0 0 0 rgba(0,0,0,0)",
            duration: 0.3,
          });
        });
      });
    }

    // Create timeline with ScrollTrigger for bottom content
    const tlBottom = gsap.timeline({
      scrollTrigger: {
        trigger: section.querySelector(".bottom-content"),
        start: "top 90%",
        end: "bottom 70%",
        scrub: 1,
        toggleActions: "restart none none reverse",
        id: `whyus-bottom-${sectionId}`,
        once: false,
      },
    });

    // Add animations for bottom section elements
    if (secondaryHeading)
      tlBottom.fromTo(
        secondaryHeading,
        { y: 20, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0,
      );
    if (ctaSubtitle)
      tlBottom.fromTo(
        ctaSubtitle,
        { y: 15, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0.1,
      );
    if (buttons.length > 0) {
      tlBottom.fromTo(
        buttons,
        { y: 20, opacity: 0, scale: 0.9 },
        {
          y: 0,
          opacity: 1,
          scale: 1,
          stagger: 0.1,
          duration: 0.5,
          ease: "back.out(1.2)",
        },
        0.2,
      );
    }
  });
</script>
