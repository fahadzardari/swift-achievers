---
import Heading from "../common/Heading.astro";
import WhyUsTag from "./WhyUsTag.astro";

import ChatIcon from "../../assets/home/chat.png";
import CallIcon from "../../assets/home/call.png";
import Image from "astro/components/Image.astro";
---

<section
  class="whyus-section bg-gradient py-10 text-white"
  data-section-id={Math.random().toString(36).substr(2, 9)}
>
  <div class="container">
    <Heading id="why-us-heading" title="Why Swift Achievers?" />
    <h3
      class="why-us-subtitle 3xl:text-[26px] mt-4 text-[18px] text-white lg:text-[20px] xl:text-[22px] 2xl:text-[24px]"
    >
      Swift Achievers Will Harness the Power of a Successful E-Commerce Growth
      Strategy!
    </h3>
    <p
      class="why-us-description mt-4 text-xs text-white lg:text-sm 2xl:text-base"
    >
      Our Amazon Marketing Agency combines intelligent strategies with profit
      opportunities and new product solutions for brands in all niches. Our
      operational expertise has given us a creative, hands-on approach to
      assisting brands in reaching, expanding, and leading the e-commerce
      ecosystem.
    </p>
    <div
      class="why-us-tags my-4 grid grid-cols-2 gap-x-4 gap-y-6 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4"
    >
      <WhyUsTag
        id="why-us-tag-1"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-2"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-3"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-4"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-5"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-6"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-7"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
      <WhyUsTag
        id="why-us-tag-8"
        title="Amazon SEO"
        description="To upscale your amazon stores by enhancing product visibility"
      />
    </div>
    <div
      class="why-us-cta mt-12 flex flex-col items-center gap-x-24 gap-y-6 rounded-2xl md:flex-row"
    >
      <div class="flex flex-col gap-4 2xl:max-w-[60%]">
        <Heading
          id="why-us-secondary-heading"
          title="Benefit from the growing E-Commerce Ecosystem"
        />
        <p
          class="why-us-cta-subtitle 3xl:text-xl text-xs font-semibold text-white md:text-sm lg:text-base xl:text-lg"
        >
          Connect with our senior consultants!
        </p>
      </div>
      <div class="why-us-buttons flex flex-col gap-6">
        <button
          class="why-us-call-btn 3xl:text-xl flex items-center justify-center gap-2 rounded-full bg-white px-5 py-1 text-left text-xs font-semibold text-[#120136] md:text-sm xl:text-lg"
        >
          <Image src={CallIcon} alt="Call Icon" class="h-4 w-4" />
          <span>Call Now</span>
        </button>
        <button
          class="why-us-chat-btn 3xl:text-xl flex items-center justify-center gap-2 rounded-full bg-white px-5 py-1 text-left text-xs font-semibold text-[#120136] md:text-sm xl:text-lg"
        >
          <Image src={ChatIcon} alt="Chat Icon" class="h-4 w-4" />
          <span>Get a Quote</span>
        </button>
      </div>
    </div>
  </div>
</section>

<svg width="0" height="0">
  <defs>
    <clipPath id="whyus-clip" clipPathUnits="objectBoundingBox">
      <path
        d="
        M0,0 
        H1 
        V0.85 
        C1,0.85 0.97,0.86 0.85,0.86 
        V1 
        H0.15 
        V0.86 
        C0.03,0.86 0,0.85 0,0.85 
        Z
      "
      ></path>
    </clipPath>
  </defs>
</svg>

<style>
  .whyus-sect {
    clip-path: polygon(
      0 0,
      100% 0,
      100% 85%,
      85% 85%,
      85% 100%,
      15% 100%,
      15% 85%,
      0 85%
    );
    clip-path: url(#whyus-clip); /* overrides if supported */
  }
</style>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  // Register ScrollTrigger plugin
  gsap.registerPlugin(ScrollTrigger);

  // Select all instances of this component (in case there are multiple)
  const whyUsSections = document.querySelectorAll(".whyus-section");

  whyUsSections.forEach((section) => {
    const sectionId = section.dataset.sectionId;

    // Get elements to animate
    const mainHeading = section.querySelector("#why-us-heading");
    const subtitle = section.querySelector(".why-us-subtitle");
    const description = section.querySelector(".why-us-description");
    const tags = section.querySelectorAll(".why-us-tags > div");
    const secondaryHeading = section.querySelector("#why-us-secondary-heading");
    const ctaSubtitle = section.querySelector(".why-us-cta-subtitle");
    const buttons = section.querySelectorAll(".why-us-buttons button");

    // Create timeline with ScrollTrigger
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: section,
        start: "top bottom", // Start animation when the top of the section hits the bottom of viewport
        end: "bottom 70%", // End animation when the bottom of the section is 70% up the viewport
        scrub: 1, // Smooth scrubbing effect tied to scroll position
        toggleActions: "restart none none reverse",
        id: `whyus-section-${sectionId}`,
        // markers: true,    // Uncomment for debugging
        once: false, // Animation plays every time user scrolls to section
      },
    });

    // Animate heading elements
    if (mainHeading) {
      tl.fromTo(
        mainHeading,
        { y: 30, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0,
      );
    }

    if (subtitle) {
      tl.fromTo(
        subtitle,
        { y: 20, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0.1,
      );
    }

    if (description) {
      tl.fromTo(
        description,
        { y: 20, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0.2,
      );
    }

    // Enhanced animations for WhyUsTag components
    if (tags.length > 0) {
      // First set initial state for all tags
      gsap.set(tags, { opacity: 0, y: 40, scale: 0.9 });

      // Animate each tag with enhanced effects
      tags.forEach((tag, index) => {
        // Get the tag title and description
        const tagTitle = tag.querySelector("h3");
        const tagDescription = tag.querySelector("p");

        // Calculate staggered delay based on grid position
        const row = Math.floor(index / 4); // Assuming 4 columns in xl breakpoint
        const col = index % 4;
        const delay = 0.3 + row * 0.05 + col * 0.05;

        // Create a mini-timeline for each tag
        tl.add(() => {
          const miniTl = gsap.timeline();

          // Animate the container
          miniTl.to(
            tag,
            {
              opacity: 1,
              y: 0,
              scale: 1,
              duration: 0.4,
              ease: "power2.out",
            },
            0,
          );

          // Animate title with slight offset
          if (tagTitle) {
            miniTl.fromTo(
              tagTitle,
              { opacity: 0, y: 10 },
              { opacity: 1, y: 0, duration: 0.3 },
              0.1,
            );
          }

          // Animate description with further offset
          if (tagDescription) {
            miniTl.fromTo(
              tagDescription,
              { opacity: 0, y: 8 },
              { opacity: 1, y: 0, duration: 0.3 },
              0.2,
            );
          }

          return miniTl;
        }, delay);
      });

      // Add hover animations (these work independently of the scroll animation)
      tags.forEach((tag) => {
        tag.addEventListener("mouseenter", () => {
          gsap.to(tag, {
            y: -5,
            scale: 1.03,
            boxShadow: "0 10px 20px rgba(0,0,0,0.15)",
            duration: 0.3,
          });
        });

        tag.addEventListener("mouseleave", () => {
          gsap.to(tag, {
            y: 0,
            scale: 1,
            boxShadow: "0 0 0 rgba(0,0,0,0)",
            duration: 0.3,
          });
        });
      });
    }

    // Animate the CTA section
    if (secondaryHeading) {
      tl.fromTo(
        secondaryHeading,
        { y: 20, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0.4 + tags.length * 0.02,
      );
    }

    if (ctaSubtitle) {
      tl.fromTo(
        ctaSubtitle,
        { y: 15, opacity: 0 },
        { y: 0, opacity: 1, duration: 0.5 },
        0.5 + tags.length * 0.02,
      );
    }

    // Animate buttons with slight bounce effect
    if (buttons.length > 0) {
      tl.fromTo(
        buttons,
        { y: 20, opacity: 0, scale: 0.9 },
        {
          y: 0,
          opacity: 1,
          scale: 1,
          stagger: 0.1,
          duration: 0.5,
          ease: "back.out(1.2)",
        },
        0.6 + tags.length * 0.02,
      );
    }
  });
</script>
