---
import "../index.css";
const { title } = Astro.props;
import Footer from "../components/Footer.astro";
import Navbar from "../components/Navbar.astro";
import ContactModal from "../components/common/ContactModal.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- Preload critical font files -->
    <link 
      rel="preload" 
      href="/fonts/poppins/poppins-v23-latin-regular.woff2" 
      as="font" 
      type="font/woff2" 
      crossorigin 
    />
    <link 
      rel="preload" 
      href="/fonts/poppins/poppins-v23-latin-500.woff2" 
      as="font" 
      type="font/woff2" 
      crossorigin 
    />
    
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="no-scrollbar w-screen overflow-x-hidden bg-[#040243]">
    <Navbar />
    <slot />
    <ContactModal />
    
    <!-- Central animation initialization -->
    <script>
      import { setupAnimations } from "../js/animation-controller.js";
      
      // Initialize animations once DOM is ready
      document.addEventListener("DOMContentLoaded", () => {
        setupAnimations();
        
        // Modal initialization
        document.querySelectorAll('.open-contact-modal, [data-modal="contact"]')
          .forEach((element) => {
            element.addEventListener("click", () => {
              const event = new CustomEvent("openContactModal");
              document.dispatchEvent(event);
            });
          });
      });
    </script>

    <!-- Lazy load chat widget -->
    <script type="text/javascript">
      // Defer chat widget loading
      let chatLoaded = false;
      
      function loadChatWidget() {
        if (chatLoaded) return;
        chatLoaded = true;
        
        var s1 = document.createElement("script");
        s1.async = true;
        s1.src = "https://embed.tawk.to/6826ef913aaa97190d877f28/1irc1lmgd";
        s1.charset = "UTF-8";
        s1.setAttribute("crossorigin", "*");
        document.head.appendChild(s1);
        
        window.Tawk_API = window.Tawk_API || {};
        window.Tawk_LoadStart = new Date();
      }
      
      // Load chat after user interaction or after 3 seconds
      document.addEventListener("click", loadChatWidget, {once: true});
      document.addEventListener("scroll", loadChatWidget, {once: true});
      setTimeout(loadChatWidget, 3000);
      
      document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".open-chat-widget").forEach((element) => {
          element.addEventListener("click", (e) => {
            e.preventDefault();
            loadChatWidget(); // Force load if not loaded yet
            
            // Check if Tawk_API is loaded
            if (typeof Tawk_API !== "undefined") {
              Tawk_API.maximize();
            }
          });
        });
      });
    </script>
  </body>
  <Footer />
</html>
