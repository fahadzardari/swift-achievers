---
import DefaultHero from "../../assets/hero/home.png";
import Image from "astro/components/Image.astro";
import FBAImage from "../../assets/hero/fba.png";

// Add environment variables
const backendURL = import.meta.env.PUBLIC_BACKEND_URL;
const brandID = import.meta.env.PUBLIC_BRAND_ID;

const {
  backgroundImage = DefaultHero,
  title = "",
  subheading = "",
  descriptionHeading = "",
  description = "",
  bulletPoints = [],
  fba = false,
} = Astro.props;
---

<header
  id="service-hero-section"
  class="relative flex min-h-screen items-center pt-40 md:pt-9"
  data-brandid={brandID}
  data-backendurl={backendURL}
>
  <div class="absolute inset-0 -z-50">
    <Image
      id="service-hero-bg"
      src={backgroundImage}
      alt="Hero background"
      class="h-full w-full object-cover"
      width={1920}
      height={1080}
      loading={"eager"}
    />
    <div
      id="service-hero-gradient"
      class="absolute inset-0 top-auto bottom-0 bg-linear-to-b from-transparent from-90% to-[#040243]"
      data-anim="fade-up"
      data-anim-delay="0.2"
    >
    </div>
  </div>
  <div
    class="content container flex flex-col gap-x-4 gap-y-8 md:flex-row md:items-center md:justify-between"
  >
    <div id="service-hero-content" class="w-full md:w-3/4 xl:w-[65%]">
      {
        subheading != "" && (
          <h3
            id="service-hero-subheading"
            class="3xl:text-2xl font-semibold text-white md:text-base lg:text-lg xl:text-xl"
            data-anim="fade-left"
          >
            {subheading}
          </h3>
        )
      }
      <h1
        id="service-hero-title"
        class="3xl:text-[70px] text-4xl font-semibold text-white sm:text-5xl lg:text-5xl xl:text-6xl xl:leading-[66px] 2xl:text-[64px] 2xl:leading-[74px]"
        data-anim="fade-up"
        data-anim-delay="0.3"
      >
        {title}
      </h1>
      {
        descriptionHeading != "" && (
          <p
            id="service-hero-desc-heading"
            class="3xl:text-2xl mt-4 font-semibold text-white md:mt-6 md:text-base lg:text-lg xl:mt-8 xl:text-xl 2xl:mt-10"
            data-anim="fade-up"
            data-anim-delay="0.5"
          >
            {descriptionHeading}
          </p>
        )
      }
      <p
        id="service-hero-description"
        class="mt-3 max-w-[714px] text-xs text-[#ffffff] md:text-xs lg:mt-5 lg:text-sm xl:text-base"
        set:html={description}
        data-anim="fade-up"
        data-anim-delay="0.7"
      />
      {
        bulletPoints.length > 0 && (
          <div
            id="service-hero-bullets"
            class="mt-8 mb-16 grid w-fit grid-cols-2 gap-x-4 gap-y-4"
            data-anim-group
            data-anim-stagger="0.1"
          >
            {bulletPoints.map((point, index) => (
              <div
                data-anim-item
                id={`service-hero-bullet-${index}`}
                class="flex items-center gap-x-2"
              >
                <div class="flex h-[18px] w-[18px] flex-shrink-0 items-center justify-center">
                  <svg
                    width="18"
                    height="18"
                    viewBox="0 0 18 18"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M13.1667 1.78332C14.4236 2.50904 15.4692 3.55043 16.1999 4.80441C16.9307 6.05839 17.3212 7.48147 17.3329 8.93277C17.3447 10.3841 16.9771 11.8133 16.2668 13.0789C15.5564 14.3445 14.5278 15.4027 13.2828 16.1486C12.0378 16.8945 10.6196 17.3023 9.1685 17.3317C7.71744 17.3611 6.28387 17.011 5.00971 16.316C3.73555 15.6211 2.66497 14.6054 1.90397 13.3696C1.14297 12.1337 0.717922 10.7206 0.670915 9.26999L0.666748 8.99999L0.670915 8.72999C0.717584 7.29082 1.13637 5.88829 1.88645 4.65915C2.63652 3.43001 3.69229 2.4162 4.95082 1.71656C6.20936 1.01692 7.6277 0.655322 9.06759 0.667023C10.5075 0.678724 11.9198 1.06332 13.1667 1.78332ZM12.0892 6.74416C11.9458 6.60068 11.7548 6.51449 11.5523 6.50175C11.3498 6.48902 11.1496 6.55062 10.9892 6.67499L10.9109 6.74416L8.16675 9.48749L7.08925 8.41082L7.01091 8.34166C6.85057 8.21737 6.65039 8.15585 6.44792 8.16862C6.24545 8.18139 6.05459 8.26759 5.91113 8.41104C5.76768 8.5545 5.68148 8.74536 5.66871 8.94783C5.65594 9.1503 5.71746 9.35048 5.84175 9.51082L5.91092 9.58916L7.57758 11.2558L7.65592 11.325C7.80206 11.4384 7.98178 11.4999 8.16675 11.4999C8.35172 11.4999 8.53144 11.4384 8.67758 11.325L8.75591 11.2558L12.0892 7.92249L12.1584 7.84416C12.2828 7.68382 12.3444 7.48361 12.3317 7.28109C12.3189 7.07857 12.2327 6.88765 12.0892 6.74416Z"
                      fill="#FD34FC"
                    />
                  </svg>
                </div>

                <span class="text-xs text-[#ffffff] capitalize md:text-xs lg:text-sm">
                  {point}
                </span>
              </div>
            ))}
          </div>
        )
      }
      <div
        id="service-hero-cta"
        class="mt-4 flex gap-x-4"
        data-anim-group
        data-anim-stagger="0.15"
        data-anim-scale="0.9"
        data-anim-y="30"
      >
        <button
          id="service-hero-chat-btn"
          class="open-chat-widget bg-gradient cursor-pointer rounded-full px-6 py-2 text-[11px] text-white md:text-xs lg:text-sm xl:text-base"
          data-anim-item
        >
          Live Chat
        </button>
        <a
          id="service-hero-phone-btn"
          class="cursor-pointer rounded-full border px-6 py-2 text-[11px] text-white md:text-xs lg:text-sm xl:text-base"
          href="tel:+19788502039"
          data-anim-item
        >
          +1 (978) 850-2039
        </a>
      </div>
    </div>
    {
      !fba && (
        <div
          id="service-hero-form-container"
          class="border-gradient max-w-[450px] rounded-md px-4 py-8 backdrop-blur-xl md:p-8"
          data-anim="fade-right"
          data-anim-delay="0.5"
        >
          <h1 class="mb-2 text-center text-2xl font-semibold text-white lg:text-3xl">
            Get In Touch
          </h1>
          <p class="mb-8 text-center text-sm text-white lg:text-base">
            Increase your Amazon store sales with our proven marketing
            strategies.
          </p>

          <div
            id="service-hero-feedback"
            class="mb-4 hidden rounded bg-green-100 px-4 py-2 text-center text-green-800"
          />

          <form id="service-hero-form" class="flex w-full flex-col gap-y-4">
            <div
              id="service-hero-form-name-container"
              data-anim="fade-up"
              data-anim-delay="0.6"
            >
              <input
                type="text"
                id="service-hero-form-name"
                class="mt-1 w-full rounded-md bg-white px-4 py-3 text-xs text-black focus:outline-none lg:text-sm"
                name="name"
                placeholder="Name"
                required
              />
            </div>
            <div
              id="service-hero-form-email-container"
              data-anim="fade-up"
              data-anim-delay="0.7"
            >
              <input
                type="email"
                id="service-hero-form-email"
                class="mt-1 w-full rounded-md bg-white px-4 py-3 text-xs text-black focus:outline-none lg:text-sm"
                name="email"
                placeholder="Email"
              />
            </div>
            <div
              id="service-hero-form-phone-container"
              data-anim="fade-up"
              data-anim-delay="0.8"
            >
              <input
                type="text"
                id="service-hero-form-phone"
                class="mt-1 w-full rounded-md bg-white px-4 py-3 text-xs text-black focus:outline-none lg:text-sm"
                name="phone"
                placeholder="Phone"
              />
            </div>
            <div
              id="service-hero-form-message-container"
              data-anim="fade-up"
              data-anim-delay="0.9"
            >
              <textarea
                id="service-hero-form-message"
                rows="8"
                class="mt-1 w-full rounded-md bg-white px-4 py-3 text-xs text-black focus:outline-none lg:text-sm"
                name="message"
                placeholder="Message"
              />
            </div>
            <button
              id="service-hero-form-submit"
              type="submit"
              class="bg-gradient w-full cursor-pointer rounded-full px-6 py-2 text-[11px] text-white md:text-xs lg:text-sm xl:text-base"
              data-anim="scale-bounce"
              data-anim-delay="1.0"
            >
              Get Free Consultation
            </button>
          </form>
        </div>
      )
    }
    {
      fba && (
        <Image
          src={FBAImage}
          alt={"fba image"}
          class={"w-auto max-w-[756px] md:w-1/2"}
          data-anim="fade-left"
          data-anim-delay="0.5"
        />
      )
    }
  </div>
</header>

<script>
  import { gsap } from "gsap";

  document.addEventListener("DOMContentLoaded", () => {
    // Form submission handler
    const form = document.getElementById("service-hero-form");
    const feedbackElement = document.getElementById("service-hero-feedback");
    const headerSection = document.getElementById("service-hero-section");

    if (form && headerSection) {
      const brandID = headerSection.dataset.brandid;
      const backendURL = headerSection.dataset.backendurl;

      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Disable form during submission
        const submitButton = document.getElementById(
          "service-hero-form-submit",
        );
        if (submitButton) {
          submitButton.disabled = true;
          submitButton.textContent = "Sending...";
        }

        // Prepare data for submission
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        // Add brand ID
        data.brandId = brandID;

        try {
          const response = await fetch(`${backendURL}/api/contact-requests`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          });

          const result = await response.json();

          // Show success message
          if (feedbackElement) {
            feedbackElement.textContent =
              "Thank you! We'll be in touch shortly.";
            feedbackElement.classList.remove(
              "hidden",
              "bg-red-100",
              "text-red-800",
            );
            feedbackElement.classList.add("bg-green-100", "text-green-800");

            // Animate feedback message
            gsap.fromTo(
              feedbackElement,
              { opacity: 0, y: -10 },
              { opacity: 1, y: 0, duration: 0.4, ease: "power2.out" },
            );
          }

          // Reset form
          form.reset();

          // Re-enable button with original text
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = "Get Free Consultation";
          }

          // Redirect after delay
          setTimeout(() => {
            window.location.pathname = "/thank-you";
          }, 2000);
        } catch (error) {
          console.error("Error submitting form:", error);

          // Show error message
          if (feedbackElement) {
            feedbackElement.textContent =
              "There was an error submitting the form. Please try again.";
            feedbackElement.classList.remove(
              "hidden",
              "bg-green-100",
              "text-green-800",
            );
            feedbackElement.classList.add("bg-red-100", "text-red-800");

            // Animate feedback message
            gsap.fromTo(
              feedbackElement,
              { opacity: 0, y: -10 },
              { opacity: 1, y: 0, duration: 0.4, ease: "power2.out" },
            );
          }

          // Re-enable button
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = "Get Free Consultation";
          }

          // Hide error after delay
          setTimeout(() => {
            if (feedbackElement) {
              gsap.to(feedbackElement, {
                opacity: 0,
                duration: 0.3,
                onComplete: () => feedbackElement.classList.add("hidden"),
              });
            }
          }, 5000);
        }
      });
    }
  });
</script>
